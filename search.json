[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "index.html#quality-control-tutorial",
    "href": "index.html#quality-control-tutorial",
    "title": "",
    "section": "Quality Control Tutorial",
    "text": "Quality Control Tutorial\nWithin this tutorial we will\n\nget familiar with the command line, running the intial and final step of the RNA-seq pipeline.\nrun fastqc of some NGS files to learn to understand the output.\nOptional: runtrimmomatic` and/or `sortmern to test some parameter and prepare the NGS file for the next exercises."
  },
  {
    "objectID": "index.html#format",
    "href": "index.html#format",
    "title": "",
    "section": "Format",
    "text": "Format\nThis is meant as a group work. We have tried to create groups with mixed skills so that you can help each other. The idea is that those of you more familiar with the environment will hone their skills by helping others which are less familiar.\nThis is of course just a suggestion and you are free to do as you like. If you decide to try, a possibly good format is for one of you to share the screen, you can take advantage of the whiteboard / marking capabilities of Zoom to then communicate by more than just talking."
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "",
    "section": "Data",
    "text": "Data\nTime series of the induction of human regulatory T cells (Tregs)\nThe dataset is available at the European Nucleotide Archive (ENA) under the accession: PRJNA369563."
  },
  {
    "objectID": "index.html#choose-your-adventure",
    "href": "index.html#choose-your-adventure",
    "title": "",
    "section": "Choose your adventure:",
    "text": "Choose your adventure:\nFrom here on the exercises will differ slightly depending on if you run them on Uppmax, or on Gitpod. Please select the tab that applies:\n\nUPPMAXGITPOD\n\n\nThis is a modified and more verbose version of the exercises as linked to from this courses’ homepage.\n\nScreen\nScreen or GNU Screen is a terminal multiplexer. In other words, it means that you can start a screen session and then open any number of windows (virtual terminals) inside that session. Processes running in Screen will continue to run when their window is not visible even if you get disconnected.\nStart a named session\nscreen -S fastqc\nDetach from Linux Screen Session\nYou can detach from the screen session at any time by typing:\nCtrl + a d\nReattach to a Linux Screen\nTo find the session ID list the current running screen sessions with:\nscreen -ls\nTo resume your screen session use the following command:\nscreen -r name\n\n\nPreparations\nMake a directory in your name in our storage project naiss2023-23-516\n\n\nSolution:\n\ncd /proj/naiss2023-23-516\nmkdir your_name\n\n\n\nFASTQC\nFastqc is a simple tool to monitor the quality and the properties of a NGS sequencing file in fastq, SAM and BAM format. More information here\nWe will check the quality of our RNAseq data set.\nSince we will create a lot of output, some we will use in a downstream analysis, I would recommend to get very well organized with a clear system of directories.\nWithin your folder create a working directory for the analyses.\n\n\nSolution:\n\nmkdir rnaseq\n\nLink the data from /proj/naiss2023-23-516/PRJNA369563/raw the following files to the directory. Look at the data.\n\n\nSolution:\n\ncd rnaseq\nln -s /proj/naiss2023-23-516/PRJNA369563/raw .\nls -F\n\nWhat other flags for ls could be informative here?\nWithin your folder create another directory for fastqc analyses.\n\n\nSolution:\n\nmkdir -p qc/fastqc\n\nNow let’s load the required tool:\nmodule load bioinfo-tools\n\nmodule load FastQC\n\nrun fastqc on a single file pair\nFor each fastq file we can run the the quality control with the following command:\nsrun - submit a job via the manager slurm\nOptions:\n\n-A: project ID\n-t allocated time dd-hh:mm:ss\n-n number of cores (default is one)\n-p number of nodes (= 20 cores, not needed for us right now)\n\n\nsrun -A naiss2023-22-1052 -t 30:00 -n 1  fastqc --noextract -o qc/fastqc raw/SRR5223499_1.fastq.gz  qc/fastqc raw/SRR5223499_2.fastq.gz\nThis works for one file, but it getting tedious for more than one file.\n\n\nrun fastqc on several files in a bash script\nIn your rnaseq folder, create a new directory called scripts, within this directory create a file called fastqc.sh\n\n\nSolution:\n\ncd path/to/rnaseq folder\nmkdir scripts\ncd scripts\nnano fastqc.sh\n\nCopy the following into the file, and save the contents. Read through the file and try to understand what the different lines are doing.\n#! /bin/bash -l\n#SBATCH -A naiss2023-22-1052\n#SBATCH -t 30:00\n#SBATCH -n 1\nmodule load bioinfo-tools\nmodule load FastQC\n\nfastqc -o ../qc/fastqc --noextract ../raw/SRR5223499_1.fastq.gz ../raw/SRR5223499_2.fastq.gz\nSubmit the script to slurm:\nsbatch fastqc.sh\n!! think about absolute versus relative paths!\n\nCheck the status of your job on Uppmax\njobinfo -u user-name\n\n\n\nLook at output\nAfter running a bash script you will get a slurm output. Look at that output. See if you understand what that output contains.\nless slurm-XXXXX.out\n\nfastqc output:\nLocate the output of FastQC. Tipp: which output directory did you specify in the\nFor each fastq file you will get two output files:\nSRR5223499_1_fastqc.zip (report, data files and graphs) SRR5223499_1_fastqc.html (report in html)\nLet’s download both files to the local computer for consulting.\nrsync -ah user@rackham.uppmax.uu.se:/proj/naiss2023-23-516/user/rnaseq/qc/fastqc .\n\n\n\n\nMultiQC\nmodule load MultiQC \n\nmkdir multiqc \n\nsrun -A naiss2023-22-1052 -t 30:00 -n 1 multiqc -f -o multiqc .\n\n\n\nGitpod is a cloud development environment where users can access and use tools in a sandbox environment acessible in your browser, regardles of your operating system.\nHere, I have installed the necessary tools necessary for todays exercises.\nGetting started with gitpod:\n\nCreate a github user for yourself and log in.\nGo to the repository https://github.com/amrei-bp/rnaseq-exercises.\nClick the button “open in gitpod”. This will ask you to give permission from github.\nNew workspace from above github repository.\n\n\nOpen this webpage in browser\ntype in terminal\ngp prevew --external amrei-bp.github.io/rnaseq-exercises\n\n\n\n\n\n\nWarning\n\n\n\nYour gitpod session will go idle and close after a while. However, your work will be saved IF you work in the project directory /workspace/rnaseq-exercises. To access the instance again you need to click on the dashboard. Move to the workspace you want to open, select the three vertical dots to the right and click “open”.\n\n\n\n\nPreparations\n\nDownload the data\nNavigate into /workspace/rnaseq-exercises/rawand execute the shell script dowload_files.sh.\n\n\nSolution:\n\ncd /workspace/rnaseq-exercises/raw\nbash dowload_files.sh\n\n\n\nPrepare directories\nMake a directory with your name in the current workspace /workspace/rnaseq-exercises\n\n\nSolution:\n\npwd\nmkdir your_name\n\n\n\n\nFASTQC\nFastqc is a simple tool to monitor the quality and the properties of a NGS sequencing file in fastq, SAM and BAM format. More information here\nWe will check the quality of our RNAseq data set.\nSince we will create a lot of output, some we will use in a downstream analysis, I would recommend to get very well organized with a clear system of directories.\nWithin your folder create a working directory for the analyses.\n\n\nSolution:\n\nmkdir rnaseq\n\nWithin the rnaseq folder create another directory for fastqc analyses.\n\n\nSolution:\n\nmkdir -p qc/fastqc\n\nYour directory should now look like this:`\nuser\n└── rnaseq\n    └── fastqc\n\nRun fastqc on a single file pair\nFor each fastq file we can run the the quality control with the following command:\nfastqc --noextract -o . ../../../raw/SRR5223499_1.fastq.gz  ../../../raw/SRR5223499_2.fastq.gz\nWhat are the options in this command, and what do they do?\nThis works for one file, but it getting tedious for more than one file.\n\n\nRun fastqc on several files in a bash script\nIn your rnaseq folder, create a new directory called scripts, within this directory create a file called fastqc.sh\n\n\nSolution:\n\ncd ..\nmkdir scripts\ncd scripts\nnano fastqc.sh\n\nCopy the following into the file, and save the contents. Read through the file and try to understand what the different lines are doing.\n#! /bin/bash\n\nfastqc -o ../fastqc  --noextract ../../../raw/SRR5223499_1.fastq.gz ../../../raw/SRR5223499_2.fastq.gz\n!! think about absolute versus relative paths!\nSubmit your job via:\nbash fastqc.sh\nThis above is of course a bit useless, just redoing the analyses we have already run. How could we expand the script to run fastqc on more files?\n\nfastqc output:\nLocate the output of FastQC. Tipp: which output directory did you specify in the run command?\nFor each fastq file you will get two output files:\n\nSRR5223499_1_fastqc.zip (report, data files and graphs)\nSRR5223499_1_fastqc.html (report in html)\n\nLet’s have a look at the output files:\nRight-click on the .html file in the explorer panel to the left. Select “Open With Live Server”.\n\n\n\n\nMultiQC\nMulti-QC summarises the output of a lot of different tools. Only having run FastQC it might not seem powerful, but at the end of workflows it is really nice to have a program go through all the files and summarize them, saving you the hassle.\nmultiqc -f -o ../multiqc .\n\n\nOptional: run more tools"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  }
]